# - *- coding: utf- 8 - *-
from aiogram import Router, Bot, F
from aiogram.filters import StateFilter
from aiogram.types import CallbackQuery, Message

from tgbot.database import Paymentsx
from tgbot.keyboards.inline_admin import payment_yoomoney_finl, close_finl, payment_cryptobot_finl
from tgbot.services.api_cryptobot import CryptobotAPI
from tgbot.services.api_yoomoney import YoomoneyAPI
from tgbot.utils.const_functions import ded
from tgbot.utils.misc.bot_models import FSM, ARS

router = Router(name=__name__)


# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - CryptoBot
@router.message(F.text == "üî∑ CryptoBot")
async def payment_cryptobot_open(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await message.answer(
        "<b>üî∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - CryptoBot</b>",
        reply_markup=payment_cryptobot_finl(),
    )


# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –ÆMoney
@router.message(F.text == "üîÆ –ÆMoney")
async def payment_yoomoney_open(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await message.answer(
        "<b>üîÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –ÆMoney</b>",
        reply_markup=payment_yoomoney_finl(),
    )


################################################################################
################################### CRYPTOBOT ##################################
# –ë–∞–ª–∞–Ω—Å - CryptoBot
@router.callback_query(F.data == "payment_cryptobot_balance")
async def payment_cryptobot_balance(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    response = await CryptobotAPI(
        bot=bot,
        arSession=arSession,
        update=call,
        skipping_error=True,
    ).balance()

    await call.message.answer(
        response,
        reply_markup=close_finl(),
    )


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - CryptoBot
@router.callback_query(F.data == "payment_cryptobot_check")
async def payment_cryptobot_check(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    status, response = await CryptobotAPI(
        bot=bot,
        arSession=arSession,
        update=call,
        skipping_error=True,
    ).check()

    await call.message.answer(
        response,
        reply_markup=close_finl(),
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ - CryptoBot
@router.callback_query(F.data == "payment_cryptobot_edit")
async def payment_cryptobot_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.set_state("here_cryptobot_token")
    await call.message.edit_text(
        ded(f"""
            <b>üî∑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ @CryptoBot –∫–æ—à–µ–ª—å–∫–∞ - <a href='https://teletype.in/@djimbox/djimboshop-cryptobot'>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</a></b>
            ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
            ‚ñ™Ô∏è –°–æ–∑–¥–∞–π—Ç–µ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ "Crypto Pay" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω
        """),
        disable_web_page_preview=True,
    )


# –í—ã–∫–ª—é—á–∞—Ç–µ–ª—å - CryptoBot
@router.callback_query(F.data.startswith("payment_cryptobot_status:"))
async def payment_cryptobot_status(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    get_status = call.data.split(":")[1]

    get_payments = Paymentsx.get()

    if get_status == "True" and get_payments.cryptobot_token == "None":
        return await call.answer("‚ùå –¢–æ–∫–µ–Ω –¥–∞–Ω–Ω–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω", True)

    Paymentsx.update(status_cryptobot=get_status)

    await call.message.edit_text(
        "<b>üî∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - CryptoBot</b>",
        reply_markup=payment_cryptobot_finl(),
    )


############################# –ü–†–ò–ù–Ø–¢–ò–ï CRYPTOBOT ###############################
# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ Cryptobot
@router.message(StateFilter("here_cryptobot_token"))
async def payment_cryptobot_get(message: Message, bot: Bot, state: FSM, arSession: ARS):
    get_token = message.text

    await state.clear()

    cache_message = await message.answer("<b>üî∑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö CryptoBot –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")

    status, response = await CryptobotAPI(
        bot=bot,
        arSession=arSession,
        update=message,
        skipping_error=True,
        token=get_token
    ).check()

    if status:
        Paymentsx.update(cryptobot_token=get_token)
        await cache_message.edit_text("<b>üî∑ CryptoBot –∫–æ—à–µ–ª—ë–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω ‚úÖ</b>")
    else:
        await cache_message.edit_text("<b>üî∑ –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å CryptoBot –∫–æ—à–µ–ª—ë–∫ ‚ùå</b>")

    await message.answer(
        "<b>üî∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - CryptoBot</b>",
        reply_markup=payment_cryptobot_finl(),
    )


################################################################################
#################################### –ÆMoney ####################################
# –ë–∞–ª–∞–Ω—Å - –ÆMoney
@router.callback_query(F.data == "payment_yoomoney_balance")
async def payment_yoomoney_balance(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession,
        update=call,
        skipping_error=True,
    ).balance()

    await call.message.answer(
        response,
        reply_markup=close_finl(),
    )


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –ÆMoney
@router.callback_query(F.data == "payment_yoomoney_check")
async def payment_yoomoney_check(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession,
        update=call,
        skipping_error=True,
    ).check()

    await call.message.answer(
        response,
        reply_markup=close_finl(),
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ - –ÆMoney
@router.callback_query(F.data == "payment_yoomoney_edit")
async def payment_yoomoney_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession
    ).authorization_get()

    await state.set_state("here_yoomoney_token")
    await call.message.edit_text(
        ded(f"""
            <b>üîÆ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ÆMoney –∫–æ—à–µ–ª—å–∫–∞ - <a href='https://teletype.in/@djimbox/editor/djimboshop-yoomoney'>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</a></b>
            ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
            ‚ñ™Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É/–∫–æ–¥ –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            ‚ñ™Ô∏è {response}
        """),
        disable_web_page_preview=True,
    )


# –í—ã–∫–ª—é—á–∞—Ç–µ–ª—å - –ÆMoney
@router.callback_query(F.data.startswith("payment_yoomoney_status:"))
async def payment_yoomoney_status(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    get_status = call.data.split(":")[1]

    get_payments = Paymentsx.get()

    if get_status == "True" and get_payments.yoomoney_token == "None":
        return await call.answer("‚ùå –¢–æ–∫–µ–Ω –¥–∞–Ω–Ω–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω", True)

    Paymentsx.update(status_yoomoney=get_status)

    await call.message.edit_text(
        "<b>üîÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –ÆMoney</b>",
        reply_markup=payment_yoomoney_finl(),
    )


################################ –ü–†–ò–ù–Ø–¢–ò–ï –ÆMONEY ###############################
# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ –ÆMoney
@router.message(StateFilter("here_yoomoney_token"))
async def payment_yoomoney_get(message: Message, bot: Bot, state: FSM, arSession: ARS):
    get_code = message.text

    try:
        get_code = get_code[get_code.index("code=") + 5:].replace(" ", "")
    except:
        ...

    cache_message = await message.answer("<b>üîÆ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ÆMoney –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")

    status, token, response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession,
    ).authorization_enter(str(get_code))

    if status:
        Paymentsx.update(yoomoney_token=token)

    await cache_message.edit_text(response)

    await state.clear()
    await message.answer(
        "<b>üîÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –ÆMoney</b>",
        reply_markup=payment_yoomoney_finl(),
    )
