# - *- coding: utf- 8 - *-
from aiogram import Router, Bot, F
from aiogram.filters import StateFilter
from aiogram.types import CallbackQuery, Message

from tgbot.database import Settingsx, Userx
from tgbot.keyboards.inline_admin import settings_status_finl, settings_finl
from tgbot.services.api_discord import DiscordDJ, DiscordAPI
from tgbot.utils.const_functions import ded
from tgbot.utils.misc.bot_models import FSM, ARS
from tgbot.utils.misc_functions import send_admins, insert_tags

router = Router(name=__name__)


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
@router.message(F.text == "üñç –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
async def settings_data_edit(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await message.answer(
        "<b>üñç –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞</b>",
        reply_markup=settings_finl(),
    )


# –í—ã–∫–ª—é—á–∞—Ç–µ–ª–∏ –±–æ—Ç–∞
@router.message(F.text == "üïπ –í—ã–∫–ª—é—á–∞—Ç–µ–ª–∏")
async def settings_status_edit(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await message.answer(
        "<b>üïπ –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</b>",
        reply_markup=settings_status_finl(),
    )


################################################################################
################################## –í–´–ö–õ–Æ–ß–ê–¢–ï–õ–ò #################################
# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Ö —Ä–∞–±–æ—Ç
@router.callback_query(F.data.startswith("settings_status_work:"))
async def settings_status_work(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    get_status = call.data.split(":")[1]

    get_user = Userx.get(user_id=call.from_user.id)
    Settingsx.update(status_work=get_status)

    if get_status == "True":
        send_text = "üî¥ –û—Ç–ø—Ä–∞–≤–∏–ª –±–æ—Ç–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã"
    else:
        send_text = "üü¢ –í—ã–≤–µ–ª –±–æ—Ç–∞ –∏–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç"

    await send_admins(
        bot=bot,
        text=ded(f"""
            üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <a href='tg://user?id={get_user.user_id}'>{get_user.user_name}</a>
            {send_text}
        """),
        not_me=get_user.user_id,
    )

    await call.message.edit_reply_markup(reply_markup=settings_status_finl())


# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫
@router.callback_query(F.data.startswith("settings_status_buy:"))
async def settings_status_buy(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    get_status = call.data.split(":")[1]

    get_user = Userx.get(user_id=call.from_user.id)
    Settingsx.update(status_buy=get_status)

    if get_status == "True":
        send_text = "üü¢ –í–∫–ª—é—á–∏–ª –ø–æ–∫—É–ø–∫–∏ –≤ –±–æ—Ç–µ"
    else:
        send_text = "üî¥ –í—ã–∫–ª—é—á–∏–ª –ø–æ–∫—É–ø–∫–∏ –≤ –±–æ—Ç–µ"

    await send_admins(
        bot=bot,
        text=ded(f"""
            üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <a href='tg://user?id={get_user.user_id}'>{get_user.user_name}</a>
            {send_text}
        """),
        not_me=get_user.user_id,
    )

    await call.message.edit_reply_markup(reply_markup=settings_status_finl())


# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π
@router.callback_query(F.data.startswith("settings_status_pay:"))
async def settings_status_pay(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    get_status = call.data.split(":")[1]

    get_user = Userx.get(user_id=call.from_user.id)
    Settingsx.update(status_refill=get_status)

    if get_status == "True":
        send_text = "üü¢ –í–∫–ª—é—á–∏–ª –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ"
    else:
        send_text = "üî¥ –í—ã–∫–ª—é—á–∏–ª –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ"

    await send_admins(
        bot,
        f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <a href='tg://user?id={get_user.user_id}'>{get_user.user_name}</a>\n"
        f"{send_text}",
        not_me=get_user.user_id,
    )

    await call.message.edit_reply_markup(reply_markup=settings_status_finl())


################################################################################
############################### –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• ###############################
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ FAQ
@router.callback_query(F.data == "settings_edit_faq")
async def settings_faq_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await state.set_state("here_settings_faq")
    await call.message.edit_text(
        ded("""
            <b>‚ùî –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è FAQ</b>
            ‚ùï –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ HTML —Ä–∞–∑–º–µ—Ç–∫—É:
            ‚ñ™Ô∏è <code>{username}</code>  - –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞–ª—è
            ‚ñ™Ô∏è <code>{user_id}</code>   - –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            ‚ñ™Ô∏è <code>{firstname}</code> - –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """)
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
@router.callback_query(F.data == "settings_edit_support")
async def settings_support_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await state.set_state("here_settings_support")
    await call.message.edit_text(
        "<b>‚òéÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>\n"
        "‚ùï –Æ–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–±–æ—Ç–∞/–∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞",
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤
@router.callback_query(F.data.startswith("settings_edit_hide_category:"))
async def settings_edit_hide_category(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    status = call.data.split(":")[1]

    Settingsx.update(misc_hide_category=status)

    await call.message.edit_text(
        "<b>üñç –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞</b>",
        reply_markup=settings_finl(),
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è –ø–æ–∑–∏—Ü–∏–π –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤
@router.callback_query(F.data.startswith("settings_edit_hide_position:"))
async def settings_edit_hide_position(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    status = call.data.split(":")[1]

    Settingsx.update(misc_hide_position=status)

    await call.message.edit_text(
        "<b>üñç –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞</b>",
        reply_markup=settings_finl(),
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∏—Å–∫–æ—Ä–¥ –≤–µ–±—Ö—É–∫–∞
@router.callback_query(F.data == "settings_edit_discord_webhook")
async def settings_discord_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    get_discord_public_webhook = await (
        DiscordDJ(
            arSession=arSession,
            bot=bot,
        )
    ).export_webhook()

    await state.set_state("here_settings_discord_webhook")
    await call.message.edit_text(
        ded(f"""
            <b>üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫ –¥–∏—Å–∫–æ—Ä–¥–∞</b>
            ‚ùï –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–∞ –≤–≤–µ–¥–∏—Ç–µ <code>0</code>
            ‚ùï –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –≤–µ–±—Ö—É–∫, –Ω–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–µ–∂–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—Å
            ‚ñ™Ô∏è –ü—É–±–ª–∏—á–Ω—ã–π –≤–µ–±—Ö—É–∫: <code>{get_discord_public_webhook}</code>
        """)
    )


################################################################################
################################ –ü–†–ò–ù–Ø–¢–ò–ï –î–ê–ù–ù–´–• ###############################
# –ü—Ä–∏–Ω—è—Ç–∏–µ FAQ
@router.message(F.text, StateFilter("here_settings_faq"))
async def settings_faq_get(message: Message, bot: Bot, state: FSM, arSession: ARS):
    get_message = insert_tags(message.from_user.id, message.text)

    try:
        await (await message.answer(get_message)).delete()
    except:
        return await message.answer(
            "<b>‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ HTML</b>\n"
            "‚ùî –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è FAQ",
        )

    await state.clear()
    Settingsx.update(misc_faq=message.text)

    await message.answer(
        "<b>üñç –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞</b>",
        reply_markup=settings_finl(),
    )


# –ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
@router.message(F.text, StateFilter("here_settings_support"))
async def settings_support_get(message: Message, bot: Bot, state: FSM, arSession: ARS):
    get_support = message.text

    if get_support.startswith("@"):
        get_support = get_support[1:]

    Settingsx.update(misc_support=get_support)
    await state.clear()

    await message.answer(
        "<b>üñç –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞</b>",
        reply_markup=settings_finl(),
    )


# –ü—Ä–∏–Ω—è—Ç–∏–µ –¥–∏—Å–∫–æ—Ä–¥ –≤–µ–±—Ö—É–∫–∞
@router.message(F.text, StateFilter("here_settings_discord_webhook"))
async def settings_discord_get(message: Message, bot: Bot, state: FSM, arSession: ARS):
    get_discord_webhook = message.text

    # –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞
    if get_discord_webhook == "0":
        Settingsx.update(
            misc_discord_webhook_url="None",
            misc_discord_webhook_name="None",
        )

        return await message.answer(
            "<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</b>",
            reply_markup=settings_finl(),
        )

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤–µ–±—Ö—É–∫–∞
    cache_message = await message.answer("<b>‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ—Ä–¥ –≤–µ–±—Ö—É–∫–∞..</b>")

    if "api" in get_discord_webhook and "webhooks" in get_discord_webhook:
        discord_webhook_status, discord_webhook_name = await (DiscordAPI(
            bot=bot,
            arSession=arSession,
            update=message,
            webhook_url=get_discord_webhook,
            skipping_error=True,
        )).check()

        if discord_webhook_status:
            await state.clear()

            Settingsx.update(
                misc_discord_webhook_url=message.text,
                misc_discord_webhook_name=discord_webhook_name,
            )

            return await cache_message.edit_text(
                "<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</b>",
                reply_markup=settings_finl(),
            )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–∞
    get_discord_public_webhook = await (
        DiscordDJ(
            arSession=arSession,
            bot=bot,
        )
    ).export_webhook()

    await cache_message.edit_text(
        ded(f"""
            <b>‚ùå –£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ–±—Ö—É–∫</b>
            ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
            üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫ –¥–∏—Å–∫–æ—Ä–¥–∞
            ‚ùï –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–∞ –≤–≤–µ–¥–∏—Ç–µ <code>0</code>
            ‚ùï –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π –≤–µ–±—Ö—É–∫, –Ω–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–µ–∂–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—Å
            ‚ñ™Ô∏è –ü—É–±–ª–∏—á–Ω—ã–π –≤–µ–±—Ö—É–∫: <code>{get_discord_public_webhook}</code>
        """)
    )
