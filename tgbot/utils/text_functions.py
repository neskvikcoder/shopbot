# - *- coding: utf- 8 - *-
from datetime import datetime
from typing import Union

import pytz
from aiogram import Bot
from aiogram.types import LinkPreviewOptions
from aiogram.utils.markdown import hide_link

from tgbot.data.config import BOT_TIMEZONE
from tgbot.database import (Categoryx, Positionx, Itemx, Purchasesx, PurchasesModel, Refillx, RefillModel, Settingsx,
                            Userx, UserModel)
from tgbot.keyboards.inline_admin import profile_edit_finl
from tgbot.keyboards.inline_admin_products import position_edit_open_finl, category_edit_open_finl, item_delete_finl
from tgbot.keyboards.inline_user import user_profile_finl
from tgbot.keyboards.inline_user_products import products_open_finl
from tgbot.utils.const_functions import ded, get_unix, convert_day, convert_date
from tgbot.utils.misc.bot_models import ARS


################################################################################
################################# –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ #################################
# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async def open_profile_user(bot: Bot, user_id: Union[int, str]):
    get_purchases = Purchasesx.gets(user_id=user_id)
    get_user = Userx.get(user_id=user_id)

    how_days = int(get_unix() - get_user.user_unix) // 60 // 60 // 24
    count_items = sum([purchase.purchase_count for purchase in get_purchases])

    send_text = ded(f"""
        <b>üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        üÜî ID: <code>{get_user.user_id}</code>
        üí∞ –ë–∞–ª–∞–Ω—Å: <code>{get_user.user_balance}‚ÇΩ</code>
        üéÅ –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{count_items}—à—Ç</code>

        üï∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: <code>{convert_date(get_user.user_unix, False, False)} ({convert_day(how_days)})</code>
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
        reply_markup=user_profile_finl(),
    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async def position_open_user(bot: Bot, user_id: int, position_id: Union[str, int], remover: Union[str, int]):
    get_items = Itemx.gets(position_id=position_id)
    get_position = Positionx.get(position_id=position_id)
    get_category = Categoryx.get(category_id=get_position.category_id)

    if get_position.position_desc != "None":
        text_desc = f"‚ñ™Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ: {get_position.position_desc}"
    else:
        text_desc = ""

    send_text = ded(f"""
        <b>üéÅ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞</b>{hide_link(get_position.position_photo)}
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        ‚ñ™Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ: <code>{get_position.position_name}</code>
        ‚ñ™Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category.category_name}</code>
        ‚ñ™Ô∏è –°—Ç–æ–∏–º–æ—Å—Ç—å: <code>{get_position.position_price}‚ÇΩ</code>
        ‚ñ™Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>{len(get_items)}—à—Ç</code>
        {text_desc}
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
        link_preview_options=LinkPreviewOptions(
            show_above_text=True,
        ),
        reply_markup=products_open_finl(position_id, get_position.category_id, remover),

    )


################################################################################
#################################### –ê–î–ú–ò–ù #####################################
# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∞–¥–º–∏–Ω–æ–º
async def open_profile_admin(bot: Bot, user_id: int, get_user: UserModel):
    get_purchases = Purchasesx.gets(user_id=get_user.user_id)

    how_days = int(get_unix() - get_user.user_unix) // 60 // 60 // 24
    count_items = sum([purchase.purchase_count for purchase in get_purchases])

    send_text = ded(f"""
        <b>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <a href='tg://user?id={get_user.user_id}'>{get_user.user_name}</a></b>
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        ‚ñ™Ô∏è ID: <code>{get_user.user_id}</code>
        ‚ñ™Ô∏è –õ–æ–≥–∏–Ω: <b>@{get_user.user_login}</b>
        ‚ñ™Ô∏è –ò–º—è: <a href='tg://user?id={get_user.user_id}'>{get_user.user_name}</a>
        ‚ñ™Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: <code>{convert_date(get_user.user_unix, False, False)} ({convert_day(how_days)})</code>

        ‚ñ™Ô∏è –ë–∞–ª–∞–Ω—Å: <code>{get_user.user_balance}‚ÇΩ</code>
        ‚ñ™Ô∏è –í—Å–µ–≥–æ –≤—ã–¥–∞–Ω–æ: <code>{get_user.user_give}‚ÇΩ</code>
        ‚ñ™Ô∏è –í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ: <code>{get_user.user_refill}‚ÇΩ</code>
        ‚ñ™Ô∏è –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{count_items}—à—Ç</code>
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
        reply_markup=profile_edit_finl(get_user.user_id),
    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º
async def refill_open_admin(bot: Bot, user_id: int, get_refill: RefillModel):
    get_user = Userx.get(user_id=get_refill.user_id)

    if get_refill.refill_method in ['Form', 'Nickname', 'Number', 'QIWI']:
        pay_method = "QIWI ü•ù"
    elif get_refill.refill_method == "Yoomoney":
        pay_method = "–ÆMoney üîÆ"
    elif get_refill.refill_method == "Cryptobot":
        pay_method = "CryptoBot üî∑"
    else:
        pay_method = f"{get_refill.refill_method}"

    send_text = ded(f"""
        <b>üßæ –ß–µ–∫: <code>#{get_refill.refill_receipt}</code></b>
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        ‚ñ™Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href='tg://user?id={get_user.user_id}'>{get_user.user_name}</a> | <code>{get_user.user_id}</code>
        ‚ñ™Ô∏è –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{get_refill.refill_amount}‚ÇΩ</code>
        ‚ñ™Ô∏è –°–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{pay_method}</code>
        ‚ñ™Ô∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{get_refill.refill_comment}</code>
        ‚ñ™Ô∏è –î–∞—Ç–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{convert_date(get_refill.refill_unix)}</code>
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–∫—É–ø–∫–∏ –∞–¥–º–∏–Ω–æ–º
async def purchase_open_admin(bot: Bot, arSession: ARS, user_id: int, get_purchase: PurchasesModel):
    from tgbot.utils.misc_functions import upload_text

    get_user = Userx.get(user_id=get_purchase.user_id)

    link_items = await upload_text(arSession, get_purchase.purchase_data)

    send_text = ded(f"""
        <b>üßæ –ß–µ–∫: <code>#{get_purchase.purchase_receipt}</code></b>
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        ‚ñ™Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href='tg://user?id={get_user.user_id}'>{get_user.user_name}</a> | <code>{get_user.user_id}</code>

        ‚ñ™Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: <code>{get_purchase.purchase_position_name}</code>
        ‚ñ™Ô∏è –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{get_purchase.purchase_count}—à—Ç</code>
        ‚ñ™Ô∏è –¶–µ–Ω–∞ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞: <code>{get_purchase.purchase_price_one}‚ÇΩ</code>
        ‚ñ™Ô∏è –°—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏: <code>{get_purchase.purchase_price}‚ÇΩ</code>

        ‚ñ™Ô∏è –ë–∞–ª–∞–Ω—Å –¥–æ –ø–æ–∫—É–ø–∫–∏: <code>{get_purchase.user_balance_before}‚ÇΩ</code>
        ‚ñ™Ô∏è –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏: <code>{get_purchase.user_balance_after}‚ÇΩ</code>

        ‚ñ™Ô∏è –¢–æ–≤–∞—Ä—ã: <a href='{link_items}'>–∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ</a>
        ‚ñ™Ô∏è –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: <code>{convert_date(get_purchase.purchase_unix)}</code>
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–æ–º
async def category_open_admin(bot: Bot, user_id: int, category_id: Union[str, int], remover: int):
    profit_amount_all, profit_amount_day, profit_amount_week, profit_amount_month = 0, 0, 0, 0
    profit_count_all, profit_count_day, profit_count_week, profit_count_month = 0, 0, 0, 0

    get_items = Itemx.gets(category_id=category_id)
    get_category = Categoryx.get(category_id=category_id)
    get_positions = Positionx.gets(category_id=category_id)

    get_purchases = Purchasesx.gets(purchase_category_id=category_id)
    get_settings = Settingsx.get()

    for purchase in get_purchases:
        profit_amount_all += purchase.purchase_price
        profit_count_all += purchase.purchase_count

        if purchase.purchase_unix - get_settings.misc_profit_day >= 0:
            profit_amount_day += purchase.purchase_price
            profit_count_day += purchase.purchase_count
        if purchase.purchase_unix - get_settings.misc_profit_week >= 0:
            profit_amount_week += purchase.purchase_price
            profit_count_week += purchase.purchase_count
        if purchase.purchase_unix - get_settings.misc_profit_month >= 0:
            profit_amount_month += purchase.purchase_price
            profit_count_month += purchase.purchase_count

    send_text = ded(f"""
        <b>üóÉÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b>
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        ‚ñ™Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category.category_name}</code>
        ‚ñ™Ô∏è –ö–æ–ª-–≤–æ –ø–æ–∑–∏—Ü–∏–π: <code>{len(get_positions)}—à—Ç</code>
        ‚ñ™Ô∏è –ö–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{len(get_items)}—à—Ç</code>
        ‚ñ™Ô∏è –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: <code>{convert_date(get_category.category_unix)}—à—Ç</code>
        
        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –î–µ–Ω—å: <code>{profit_count_day}—à—Ç</code> - <code>{profit_amount_day}‚ÇΩ</code>
        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –ù–µ–¥–µ–ª—é: <code>{profit_count_week}—à—Ç</code> - <code>{profit_amount_week}‚ÇΩ</code>
        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –ú–µ—Å—è—Ü: <code>{profit_count_month}—à—Ç</code> - <code>{profit_amount_month}‚ÇΩ</code>
        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –í—Å—ë –≤—Ä–µ–º—è: <code>{profit_count_all}—à—Ç</code> - <code>{profit_amount_all}‚ÇΩ</code>
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
        reply_markup=await category_edit_open_finl(bot, category_id, remover),
    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∞–¥–º–∏–Ω–æ–º
async def position_open_admin(bot: Bot, user_id: int, position_id: Union[str, int]):
    profit_amount_all, profit_amount_day, profit_amount_week, profit_amount_month = 0, 0, 0, 0
    profit_count_all, profit_count_day, profit_count_week, profit_count_month = 0, 0, 0, 0

    get_items = Itemx.gets(position_id=position_id)
    get_position = Positionx.get(position_id=position_id)
    get_category = Categoryx.get(category_id=get_position.category_id)

    get_purchases = Purchasesx.gets(purchase_position_id=position_id)
    get_settings = Settingsx.get()

    if get_position.position_photo != "None":
        position_photo_text = "<code>–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚úÖ</code>"
    else:
        position_photo_text = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"

    if get_position.position_desc != "None":
        position_desc = f"{get_position.position_desc}"
    else:
        position_desc = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"

    for purchase in get_purchases:
        profit_amount_all += purchase.purchase_price
        profit_count_all += purchase.purchase_count

        if purchase.purchase_unix - get_settings.misc_profit_day >= 0:
            profit_amount_day += purchase.purchase_price
            profit_count_day += purchase.purchase_count
        if purchase.purchase_unix - get_settings.misc_profit_week >= 0:
            profit_amount_week += purchase.purchase_price
            profit_count_week += purchase.purchase_count
        if purchase.purchase_unix - get_settings.misc_profit_month >= 0:
            profit_amount_month += purchase.purchase_price
            profit_count_month += purchase.purchase_count

    send_text = ded(f"""
        <b>üìÅ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏</b>{hide_link(get_position.position_photo)}
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        ‚ñ™Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category.category_name}</code>
        ‚ñ™Ô∏è –ü–æ–∑–∏—Ü–∏—è: <code>{get_position.position_name}</code>
        ‚ñ™Ô∏è –°—Ç–æ–∏–º–æ—Å—Ç—å: <code>{get_position.position_price}‚ÇΩ</code>
        ‚ñ™Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>{len(get_items)}—à—Ç</code>
        ‚ñ™Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {position_photo_text}
        ‚ñ™Ô∏è –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: <code>{convert_date(get_category.category_unix)}</code>
        ‚ñ™Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ: {position_desc}

        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –î–µ–Ω—å: <code>{profit_count_day}—à—Ç</code> - <code>{profit_amount_day}‚ÇΩ</code>
        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –ù–µ–¥–µ–ª—é: <code>{profit_count_week}—à—Ç</code> - <code>{profit_amount_week}‚ÇΩ</code>
        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –ú–µ—Å—è—Ü: <code>{profit_count_month}—à—Ç</code> - <code>{profit_amount_month}‚ÇΩ</code>
        üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –í—Å—ë –≤—Ä–µ–º—è: <code>{profit_count_all}—à—Ç</code> - <code>{profit_amount_all}‚ÇΩ</code>
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
        link_preview_options=LinkPreviewOptions(
            show_above_text=True,
        ),
        reply_markup=await position_edit_open_finl(bot, position_id, get_position.category_id, 0),

    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–æ–≤–∞—Ä–∞ –∞–¥–º–∏–Ω–æ–º
async def item_open_admin(bot: Bot, user_id: int, item_id: Union[str, int], remover: int):
    get_item = Itemx.get(item_id=item_id)

    get_position = Positionx.get(position_id=get_item.position_id)
    get_category = Categoryx.get(category_id=get_item.category_id)

    send_text = ded(f"""
        <b>üéÅÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</b>
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        ‚ñ™Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category.category_name}</code>
        ‚ñ™Ô∏è –ü–æ–∑–∏—Ü–∏—è: <code>{get_position.position_name}</code>
        ‚ñ™Ô∏è –î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: <code>{convert_date(get_item.item_unix)}</code>
        ‚ñ™Ô∏è –¢–æ–≤–∞—Ä: <code>{get_item.item_data}</code>
    """)

    await bot.send_message(
        chat_id=user_id,
        text=send_text,
        reply_markup=item_delete_finl(get_item.item_id, get_item.position_id, get_item.category_id),
    )


################################################################################
################################################################################
# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
def get_statistics() -> str:
    refill_amount_all, refill_amount_day, refill_amount_week, refill_amount_month = 0, 0, 0, 0
    refill_count_all, refill_count_day, refill_count_week, refill_count_month = 0, 0, 0, 0
    profit_amount_all, profit_amount_day, profit_amount_week, profit_amount_month = 0, 0, 0, 0
    profit_count_all, profit_count_day, profit_count_week, profit_count_month = 0, 0, 0, 0
    users_all, users_day, users_week, users_month, users_money_have, users_money_give = 0, 0, 0, 0, 0, 0
    refill_cryptobot_count, refill_cryptobot_amount, refill_yoomoney_count, refill_yoomoney_amount = 0, 0, 0, 0

    get_categories = Categoryx.get_all()
    get_positions = Positionx.get_all()
    get_purchases = Purchasesx.get_all()
    get_refill = Refillx.get_all()
    get_items = Itemx.get_all()
    get_users = Userx.get_all()
    get_settings = Settingsx.get()

    # –ü–æ–∫—É–ø–∫–∏
    for purchase in get_purchases:
        profit_amount_all += purchase.purchase_price
        profit_count_all += purchase.purchase_count

        if purchase.purchase_unix - get_settings.misc_profit_day >= 0:
            profit_amount_day += purchase.purchase_price
            profit_count_day += purchase.purchase_count
        if purchase.purchase_unix - get_settings.misc_profit_week >= 0:
            profit_amount_week += purchase.purchase_price
            profit_count_week += purchase.purchase_count
        if purchase.purchase_unix - get_settings.misc_profit_month >= 0:
            profit_amount_month += purchase.purchase_price
            profit_count_month += purchase.purchase_count

    # –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    for refill in get_refill:
        refill_amount_all += refill.refill_amount
        refill_count_all += 1

        if refill.refill_method == "Yoomoney":
            refill_yoomoney_count += 1
            refill_yoomoney_amount += refill.refill_amount
        elif refill.refill_method == "Cryptobot":
            refill_cryptobot_count += 1
            refill_cryptobot_amount += refill.refill_amount

        if refill.refill_unix - get_settings.misc_profit_day >= 0:
            refill_amount_day += refill.refill_amount
            refill_count_day += 1
        if refill.refill_unix - get_settings.misc_profit_week >= 0:
            refill_amount_week += refill.refill_amount
            refill_count_week += 1
        if refill.refill_unix - get_settings.misc_profit_month >= 0:
            refill_amount_month += refill.refill_amount
            refill_count_month += 1

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞
    for user in get_users:
        users_money_have += user.user_balance
        users_money_give += user.user_give
        users_all += 1

        if user.user_unix - get_settings.misc_profit_day >= 0:
            users_day += 1
        if user.user_unix - get_settings.misc_profit_week >= 0:
            users_week += 1
        if user.user_unix - get_settings.misc_profit_month >= 0:
            users_month += 1

    # –î–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    all_days = [
        '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ',
    ]

    all_months = [
        '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å', '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å',
        '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ]

    now_day = datetime.now().day
    now_week = datetime.now().weekday()
    now_month = datetime.now().month
    now_year = datetime.now().year

    unix_day = int(datetime.strptime(f"{now_day}.{now_month}.{now_year} 0:0:0", "%d.%m.%Y %H:%M:%S").timestamp())
    unix_week = unix_day - (now_week * 86400)

    week_day = int(datetime.fromtimestamp(unix_week, pytz.timezone(BOT_TIMEZONE)).strftime("%d"))
    week_month = int(datetime.fromtimestamp(unix_week, pytz.timezone(BOT_TIMEZONE)).strftime("%m"))
    week_week = int(datetime.fromtimestamp(unix_week, pytz.timezone(BOT_TIMEZONE)).weekday())

    return ded(f"""
        <b>üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–¢–ê</b>
        ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        <b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>
        ‚î£ –Æ–∑–µ—Ä–æ–≤ –∑–∞ –î–µ–Ω—å: <code>{users_day}</code>
        ‚î£ –Æ–∑–µ—Ä–æ–≤ –∑–∞ –ù–µ–¥–µ–ª—é: <code>{users_week}</code>
        ‚î£ –Æ–∑–µ—Ä–æ–≤ –∑–∞ –ú–µ—Å—è—Ü: <code>{users_month}</code>
        ‚îó –Æ–∑–µ—Ä–æ–≤ –∑–∞ –í—Å—ë –≤—Ä–µ–º—è: <code>{users_all}</code>

        <b>üí∞ –°—Ä–µ–¥—Å—Ç–≤–∞</b>
        ‚î£‚Äí –ü—Ä–æ–¥–∞–∂–∏ (–∫–æ–ª-–≤–æ, —Å—É–º–º–∞)
        ‚î£ –ó–∞ –î–µ–Ω—å: <code>{profit_count_day}—à—Ç</code> - <code>{profit_amount_day}‚ÇΩ</code>
        ‚î£ –ó–∞ –ù–µ–¥–µ–ª—é: <code>{profit_count_week}—à—Ç</code> - <code>{profit_amount_week}‚ÇΩ</code>
        ‚î£ –ó–∞ –ú–µ—Å—è—Ü: <code>{profit_count_month}—à—Ç</code> - <code>{profit_amount_month}‚ÇΩ</code>
        ‚î£ –ó–∞ –í—Å—ë –≤—Ä–µ–º—è: <code>{profit_count_all}—à—Ç</code> - <code>{profit_amount_all}‚ÇΩ</code>
        ‚îÉ
        ‚î£‚Äí –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è (–∫–æ–ª-–≤–æ, —Å—É–º–º–∞)
        ‚î£ –ó–∞ –î–µ–Ω—å: <code>{refill_count_day}—à—Ç</code> - <code>{refill_amount_day}‚ÇΩ</code>
        ‚î£ –ó–∞ –ù–µ–¥–µ–ª—é: <code>{refill_count_week}—à—Ç</code> - <code>{refill_amount_week}‚ÇΩ</code>
        ‚î£ –ó–∞ –ú–µ—Å—è—Ü: <code>{refill_count_month}—à—Ç</code> - <code>{refill_amount_month}‚ÇΩ</code>
        ‚î£ –ó–∞ –í—Å—ë –≤—Ä–µ–º—è: <code>{refill_count_all}—à—Ç</code> - <code>{refill_amount_all}‚ÇΩ</code>
        ‚îÉ
        ‚î£‚Äí –ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã (–≤—Å–µ–≥–æ)
        ‚î£ –ÆMoney: <code>{refill_yoomoney_count}—à—Ç</code> - <code>{refill_yoomoney_amount}‚ÇΩ</code>
        ‚î£ CryptoBot: <code>{refill_cryptobot_count}—à—Ç</code> - <code>{refill_cryptobot_amount}‚ÇΩ</code>
        ‚îÉ
        ‚î£‚Äí –û—Å—Ç–∞–ª—å–Ω—ã–µ
        ‚î£ –°—Ä–µ–¥—Å—Ç–≤ –≤—ã–¥–∞–Ω–æ: <code>{users_money_give}‚ÇΩ</code>
        ‚îó –°—Ä–µ–¥—Å—Ç–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: <code>{users_money_have}‚ÇΩ</code>

        <b>üéÅ –¢–æ–≤–∞—Ä—ã</b>
        ‚î£ –¢–æ–≤–∞—Ä–æ–≤: <code>{len(get_items)}—à—Ç</code>
        ‚î£ –ü–æ–∑–∏—Ü–∏–π: <code>{len(get_positions)}—à—Ç</code>
        ‚îó –ö–∞—Ç–µ–≥–æ—Ä–∏–π: <code>{len(get_categories)}—à—Ç</code>

        <b>üï∞ –î–∞—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</b>
        ‚î£ –î–Ω–µ–≤–Ω–∞—è: <code>{now_day} {all_months[now_month - 1].title()}</code>
        ‚î£ –ù–µ–¥–µ–ª—å–Ω–∞—è: <code>{week_day} {all_months[week_month - 1].title()}, {all_days[week_week]}</code>
        ‚îó –ú–µ—Å—è—á–Ω–∞—è: <code>1 {all_months[now_month - 1].title()}, {now_year}–≥</code>
   """)
